classdef UIThisLine < handle
    properties
        ParentFigure
        ParentAxes
        Direction
        Position
        LineObj
        InputWindowButtonMotionFcn
        InputWindowButtonUpFcn
    end
    
    methods
        function obj = UIThisLine(...
                parentFigure,...
                parentAxes,...                
                direction,...
                position,...
                inputWindowButtonMotionFcn,...
                inputWindowButtonUpFcn,...
                varargin)
            if ~isa(parentAxes,'matlab.graphics.axis.Axes')
                error('parentAxes should be an Axes');
            end
            obj.ParentFigure = parentFigure;
            obj.ParentAxes = parentAxes;         
            xl = xlim(parentAxes);
            yl = ylim(parentAxes);
            obj.Direction = direction;   
            obj.InputWindowButtonMotionFcn=...
                inputWindowButtonMotionFcn;
            obj.InputWindowButtonUpFcn=...
                inputWindowButtonUpFcn;
            switch obj.Direction 
                case 'x'
                    if isempty(varargin)
                    obj.LineObj = line(...
                        'Parent',	parentAxes,...
                        'XData',	xl,...
                        'YData',	[position,position],...
                        'ButtonDownFcn',@obj.uiButtonDownFcn); 
                    else
                        obj.LineObj = line(...
                        'Parent',	parentAxes,...
                        'XData',	xl,...
                        'YData',	[position,position],...
                        'ButtonDownFcn',@obj.uiButtonDownFcn,...
                        varargin{:});
                    end
                case 'y'
                    if isempty(varargin)
                        obj.LineObj = line(...
                            'Parent',	parentAxes,...
                            'XData',            [position,position],...
                            'YData',            yl,...
                            'ButtonDownFcn',@obj.uiButtonDownFcn);
                    else
                        obj.LineObj = line(...
                            'Parent',	parentAxes,...
                            'XData',            [position,position],...
                            'YData',            yl,...
                            'ButtonDownFcn',@obj.uiButtonDownFcn,...
                            varargin{:});
                    end
                otherwise
                    error('Direction should be either ''x'' or ''y''.');
            end
            obj.Position = position;
        end
        function uiButtonDownFcn(obj,~,~)
            set(obj.ParentFigure,...
                'WindowButtonMotionFcn',@obj.userWindowButtonMotionFcn,...
                'WindowButtonUpFcn',@obj.userWindowButtonUpFcn);
        end
        function userWindowButtonMotionFcn(obj,~,~)
            obj.updatePosition;
            obj.InputWindowButtonMotionFcn();
        end
        function userWindowButtonUpFcn(obj,~,~)
            obj.InputWindowButtonUpFcn();
            set(obj.ParentFigure,...
                'WindowButtonMotionFcn',[],...
                'WindowButtonUpFcn',[]); 
        end
        function updatePosition(obj,~,~)
            position = get(obj.ParentAxes,'CurrentPoint');
            xl = xlim(obj.ParentAxes);
            yl = ylim(obj.ParentAxes);
            switch obj.Direction 
                case 'x'
                    set(obj.LineObj,...                        
                        'XData',	xl,...
                        'YData',	[position(1,2),position(1,2)]); 
                    obj.Position = position(1,2);
                case 'y'
                    set(obj.LineObj,...                        
                        'XData',	[position(1,1),position(1,1)],...
                        'YData',	yl);  
                    obj.Position = position(1,1);
                otherwise
                    error('Direction should be either ''x'' or ''y''.');
            end
        end
        function setPosition(obj,position)
            xl = xlim(obj.ParentAxes);
            yl = ylim(obj.ParentAxes);
            switch obj.Direction 
                case 'x'
                    set(obj.LineObj,...                        
                        'XData',	xl,...
                        'YData',	[position,position]); 
                    obj.Position = position;
                case 'y'
                    set(obj.LineObj,...                        
                        'XData',	[position,position],...
                        'YData',	yl);  
                    obj.Position = position;
                otherwise
                    error('Direction should be either ''x'' or ''y''.');
            end
        end
    end
end

